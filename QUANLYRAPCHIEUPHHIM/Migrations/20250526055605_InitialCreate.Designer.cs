// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QUANLYRAPCHIEUPHHIM.Data;

#nullable disable

namespace QUANLYRAPCHIEUPHHIM.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    [Migration("20250526055605_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("address_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("AddressDetail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("address_detail");

                    b.Property<int>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("city_id");

                    b.HasKey("AddressId")
                        .HasName("PK__Address__CAA247C899E5234E");

                    b.HasIndex("CityId");

                    b.ToTable("Address", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.AppRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.AppUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.AppUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.AppUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.AppUserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("booking_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("BookingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("booking_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int")
                        .HasColumnName("discount_id");

                    b.Property<DateTime?>("PaymentDueDate")
                        .HasColumnType("datetime")
                        .HasColumnName("payment_due_date");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total_amount");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("BookingId")
                        .HasName("PK__Booking__5DE3A5B1C0C00224");

                    b.HasIndex("DiscountId");

                    b.HasIndex(new[] { "BookingDate" }, "idx_booking_date");

                    b.HasIndex(new[] { "UserId" }, "idx_booking_user");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.BookingBookingStatus", b =>
                {
                    b.Property<int>("BookingBookingStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("booking_booking_status_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingBookingStatusId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("booking_id");

                    b.Property<int>("BookingStatusId")
                        .HasColumnType("int")
                        .HasColumnName("booking_status_id");

                    b.HasKey("BookingBookingStatusId")
                        .HasName("PK__BookingB__3880CD97013DEAE3");

                    b.HasIndex("BookingStatusId");

                    b.HasIndex(new[] { "BookingId", "BookingStatusId" }, "UC_BookingBookingStatus")
                        .IsUnique();

                    b.ToTable("BookingBookingStatus", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.BookingStatus", b =>
                {
                    b.Property<int>("BookingStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("booking_status_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingStatusId"));

                    b.Property<string>("BookingStatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("booking_status_name");

                    b.HasKey("BookingStatusId")
                        .HasName("PK__BookingS__B02F4E9EBBDED263");

                    b.HasIndex(new[] { "BookingStatusName" }, "UQ__BookingS__0A422CD5396FF74F")
                        .IsUnique();

                    b.ToTable("BookingStatus", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Cinema", b =>
                {
                    b.Property<int>("CinemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cinema_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CinemaId"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int")
                        .HasColumnName("address_id");

                    b.Property<string>("CinemaName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("cinema_name");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CinemaId")
                        .HasName("PK__Cinema__5662877880FA2573");

                    b.HasIndex("AddressId");

                    b.ToTable("Cinema", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("city_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("city_name");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int")
                        .HasColumnName("province_id");

                    b.HasKey("CityId")
                        .HasName("PK__City__031491A87F3C4E2E");

                    b.HasIndex("ProvinceId");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("discount_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"));

                    b.Property<string>("CouponCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("coupon_code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DiscountName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("discount_name");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("decimal(8, 2)")
                        .HasColumnName("discount_value");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UsageLimit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("usage_limit");

                    b.HasKey("DiscountId")
                        .HasName("PK__Discount__BDBE9EF90B197F50");

                    b.HasIndex(new[] { "CouponCode" }, "UQ__Discount__ADE5CBB776BB8E6A")
                        .IsUnique()
                        .HasFilter("[coupon_code] IS NOT NULL");

                    b.ToTable("Discount", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.DiscountDiscountType", b =>
                {
                    b.Property<int>("DiscountDiscountTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("discount_discount_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountDiscountTypeId"));

                    b.Property<int>("DiscountId")
                        .HasColumnType("int")
                        .HasColumnName("discount_id");

                    b.Property<int>("DiscountTypeId")
                        .HasColumnType("int")
                        .HasColumnName("discount_type_id");

                    b.HasKey("DiscountDiscountTypeId")
                        .HasName("PK__Discount__A4380354AA9F4286");

                    b.HasIndex("DiscountTypeId");

                    b.HasIndex(new[] { "DiscountId", "DiscountTypeId" }, "UC_DiscountDiscountType")
                        .IsUnique();

                    b.ToTable("DiscountDiscountType", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.DiscountType", b =>
                {
                    b.Property<int>("DiscountTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("discount_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountTypeId"));

                    b.Property<string>("DiscountTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("discount_type_name");

                    b.HasKey("DiscountTypeId")
                        .HasName("PK__Discount__61DC13AA4708DE68");

                    b.HasIndex(new[] { "DiscountTypeName" }, "UQ__Discount__805CD7FE0A6BE97C")
                        .IsUnique();

                    b.ToTable("DiscountType", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("genre_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("genre_name");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("GenreId")
                        .HasName("PK__Genre__18428D423DA4D0E0");

                    b.HasIndex(new[] { "GenreName" }, "UQ__Genre__1E98D15134FDBC71")
                        .IsUnique();

                    b.ToTable("Genre", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("movie_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<string>("AgeLimit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("age_limit");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(8, 2)")
                        .HasColumnName("base_price");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<string>("Language")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("language");

                    b.Property<string>("PanelUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("panel_url");

                    b.Property<string>("PosterUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("poster_url");

                    b.Property<double?>("Rating")
                        .HasColumnType("float")
                        .HasColumnName("rating");

                    b.Property<DateOnly?>("ReleaseDate")
                        .HasColumnType("date")
                        .HasColumnName("release_date");

                    b.Property<string>("Subtitles")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("subtitles");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("title");

                    b.Property<string>("TrailerUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("trailer_url");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("MovieId")
                        .HasName("PK__Movie__83CDF749A1C50F9E");

                    b.HasIndex(new[] { "Title" }, "idx_movie_title");

                    b.ToTable("Movie", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.MovieCast", b =>
                {
                    b.Property<int>("MovieCastId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("movie_cast_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieCastId"));

                    b.Property<string>("CharacterName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("character_name");

                    b.Property<int>("MovieId")
                        .HasColumnType("int")
                        .HasColumnName("movie_id");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("person_id");

                    b.HasKey("MovieCastId")
                        .HasName("PK__MovieCas__00C3DA8502C1C510");

                    b.HasIndex("MovieId");

                    b.HasIndex("PersonId");

                    b.ToTable("MovieCast", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.MovieCastRoleType", b =>
                {
                    b.Property<int>("MovieCastRoleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("movie_cast_role_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieCastRoleTypeId"));

                    b.Property<int>("MovieCastId")
                        .HasColumnType("int")
                        .HasColumnName("movie_cast_id");

                    b.Property<int>("RoleTypeId")
                        .HasColumnType("int")
                        .HasColumnName("role_type_id");

                    b.HasKey("MovieCastRoleTypeId")
                        .HasName("PK__MovieCas__C7097E3A10D56D50");

                    b.HasIndex("RoleTypeId");

                    b.HasIndex(new[] { "MovieCastId", "RoleTypeId" }, "UC_MovieCastRoleType")
                        .IsUnique();

                    b.ToTable("MovieCastRoleType", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.MovieFormat", b =>
                {
                    b.Property<int>("MovieFormatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("movie_format_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieFormatId"));

                    b.Property<int>("FormatId")
                        .HasColumnType("int")
                        .HasColumnName("format_id");

                    b.Property<int>("MovieId")
                        .HasColumnType("int")
                        .HasColumnName("movie_id");

                    b.HasKey("MovieFormatId")
                        .HasName("PK__MovieFor__E435C60BBD0DD678");

                    b.HasIndex("FormatId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieFormat", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.MovieGenre", b =>
                {
                    b.Property<int>("MovieGenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("movie_genre_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieGenreId"));

                    b.Property<int>("GenreId")
                        .HasColumnType("int")
                        .HasColumnName("genre_id");

                    b.Property<int>("MovieId")
                        .HasColumnType("int")
                        .HasColumnName("movie_id");

                    b.HasKey("MovieGenreId")
                        .HasName("PK__MovieGen__FE9D0DC61BFDC743");

                    b.HasIndex("GenreId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieGenre", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.MoviePerson", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("person_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("biography");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("full_name");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nationality");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("PersonId")
                        .HasName("PK__MoviePer__543848DF0D2E81D4");

                    b.ToTable("MoviePerson", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("payment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amount");

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("booking_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("payment_date");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int")
                        .HasColumnName("payment_method_id");

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("payment_status");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("transaction_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payment__ED1FC9EA9281E88E");

                    b.HasIndex("BookingId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("payment_method_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentMethodId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MethodName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("method_name");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("PaymentMethodId")
                        .HasName("PK__PaymentM__8A3EA9EB254402DF");

                    b.HasIndex(new[] { "MethodName" }, "UQ__PaymentM__2DA2FAEE73397403")
                        .IsUnique();

                    b.ToTable("PaymentMethod", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Province", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("province_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvinceId"));

                    b.Property<string>("ProvinceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("province_name");

                    b.HasKey("ProvinceId")
                        .HasName("PK__Province__08DCB60FC3C10165");

                    b.HasIndex(new[] { "ProvinceName" }, "UQ__Province__D6FBADF9C7CDB56F")
                        .IsUnique();

                    b.ToTable("Province", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role_name");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__760965CC1234474A");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Role__783254B1D380F08E")
                        .IsUnique();

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.RoleType", b =>
                {
                    b.Property<int>("RoleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleTypeId"));

                    b.Property<string>("RoleTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role_type_name");

                    b.HasKey("RoleTypeId")
                        .HasName("PK__RoleType__58914784B251A959");

                    b.HasIndex(new[] { "RoleTypeName" }, "UQ__RoleType__DDC330EE3629E291")
                        .IsUnique();

                    b.ToTable("RoleType", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("capacity");

                    b.Property<int>("CinemaId")
                        .HasColumnType("int")
                        .HasColumnName("cinema_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("FormatId")
                        .HasColumnType("int")
                        .HasColumnName("format_id");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("room_name");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("RoomId")
                        .HasName("PK__Room__19675A8AE015982B");

                    b.HasIndex("FormatId");

                    b.HasIndex(new[] { "CinemaId", "RoomName" }, "UC_Room")
                        .IsUnique();

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.RoomFormat", b =>
                {
                    b.Property<int>("FormatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("format_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormatId"));

                    b.Property<decimal?>("AdditionalCharge")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(8, 2)")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("additional_charge");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("description");

                    b.Property<string>("FormatName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("format_name");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("FormatId")
                        .HasName("PK__RoomForm__26B11DF134B7BF60");

                    b.HasIndex(new[] { "FormatName" }, "UQ__RoomForm__8D68276D7852F48E")
                        .IsUnique();

                    b.ToTable("RoomFormat", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Seat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("seat_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<string>("RowLetter")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("row_letter")
                        .IsFixedLength();

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int")
                        .HasColumnName("seat_number");

                    b.Property<int>("SeatTypeId")
                        .HasColumnType("int")
                        .HasColumnName("seat_type_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("SeatId")
                        .HasName("PK__Seat__906DED9C93B811CF");

                    b.HasIndex("SeatTypeId");

                    b.HasIndex(new[] { "RoomId", "RowLetter", "SeatNumber" }, "UC_Seat")
                        .IsUnique();

                    b.ToTable("Seat", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.SeatType", b =>
                {
                    b.Property<int>("SeatTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("seat_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatTypeId"));

                    b.Property<decimal?>("AdditionalCharge")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(8, 2)")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("additional_charge");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("description");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type_name");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("SeatTypeId")
                        .HasName("PK__SeatType__5C2EB19760C83778");

                    b.HasIndex(new[] { "TypeName" }, "UQ__SeatType__543C4FD920CE7E76")
                        .IsUnique();

                    b.ToTable("SeatType", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Showtime", b =>
                {
                    b.Property<int>("ShowtimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("showtime_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowtimeId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("end_time");

                    b.Property<int>("MovieId")
                        .HasColumnType("int")
                        .HasColumnName("movie_id");

                    b.Property<decimal?>("PriceModifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("price_modifier");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("start_time");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ShowtimeId")
                        .HasName("PK__Showtime__A406B518C4D6AA7E");

                    b.HasIndex("MovieId");

                    b.HasIndex("RoomId");

                    b.HasIndex(new[] { "StartTime" }, "idx_showtime_start");

                    b.ToTable("Showtime", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ticket_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("booking_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("price");

                    b.Property<DateTime?>("ScanDatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("scan_datetime");

                    b.Property<int>("SeatId")
                        .HasColumnType("int")
                        .HasColumnName("seat_id");

                    b.Property<int>("ShowtimeId")
                        .HasColumnType("int")
                        .HasColumnName("showtime_id");

                    b.Property<string>("TicketCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ticket_code");

                    b.Property<string>("TicketStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ticket_status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("TicketId")
                        .HasName("PK__Ticket__D596F96B7CBFCD39");

                    b.HasIndex("BookingId");

                    b.HasIndex("SeatId");

                    b.HasIndex(new[] { "ShowtimeId", "SeatId" }, "UC_Ticket")
                        .IsUnique();

                    b.HasIndex(new[] { "TicketCode" }, "UQ__Ticket__628DB75F81D384B2")
                        .IsUnique();

                    b.HasIndex(new[] { "TicketCode" }, "idx_ticket_code");

                    b.ToTable("Ticket", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("full_name");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegistrationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("registration_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__User__B9BE370F07D83566");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex(new[] { "Email" }, "UQ__User__AB6E61642EF7F8C8")
                        .IsUnique();

                    b.HasIndex(new[] { "UserName" }, "UQ__User__F3DBC5729DB2EDAD")
                        .IsUnique()
                        .HasFilter("[username] IS NOT NULL");

                    b.HasIndex(new[] { "Email" }, "idx_user_email");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("UserRoleId")
                        .HasName("PK__UserRole__B8D9ABA27171D89B");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "UserId", "RoleId" }, "UC_UserRole")
                        .IsUnique();

                    b.ToTable("UserRole", (string)null);
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Address", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Address__city_id__3D5E1FD2");

                    b.Navigation("City");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.AppRoleClaim", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.AppUserClaim", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.AppUserLogin", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.AppUserRole", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.AppUserToken", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Booking", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.Discount", "Discount")
                        .WithMany("Bookings")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Booking__discoun__2EDAF651");

                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Booking__user_id__2DE6D218");

                    b.Navigation("Discount");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.BookingBookingStatus", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.Booking", "Booking")
                        .WithMany("BookingBookingStatuses")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__BookingBo__booki__32AB8735");

                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.BookingStatus", "BookingStatus")
                        .WithMany("BookingBookingStatuses")
                        .HasForeignKey("BookingStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__BookingBo__booki__339FAB6E");

                    b.Navigation("Booking");

                    b.Navigation("BookingStatus");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Cinema", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.Address", "Address")
                        .WithMany("Cinemas")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Cinema__address___4222D4EF");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.City", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.Province", "Province")
                        .WithMany("Cities")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__City__province_i__3A81B327");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.DiscountDiscountType", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.Discount", "Discount")
                        .WithMany("DiscountDiscountTypes")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__DiscountD__disco__1F98B2C1");

                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.DiscountType", "DiscountType")
                        .WithMany("DiscountDiscountTypes")
                        .HasForeignKey("DiscountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__DiscountD__disco__208CD6FA");

                    b.Navigation("Discount");

                    b.Navigation("DiscountType");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.MovieCast", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.Movie", "Movie")
                        .WithMany("MovieCasts")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__MovieCast__movie__02FC7413");

                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.MoviePerson", "Person")
                        .WithMany("MovieCasts")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__MovieCast__perso__03F0984C");

                    b.Navigation("Movie");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.MovieCastRoleType", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.MovieCast", "MovieCast")
                        .WithMany("MovieCastRoleTypes")
                        .HasForeignKey("MovieCastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__MovieCast__movie__07C12930");

                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.RoleType", "RoleType")
                        .WithMany("MovieCastRoleTypes")
                        .HasForeignKey("RoleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__MovieCast__role___08B54D69");

                    b.Navigation("MovieCast");

                    b.Navigation("RoleType");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.MovieFormat", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.RoomFormat", "Format")
                        .WithMany("MovieFormats")
                        .HasForeignKey("FormatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__MovieForm__forma__7D439ABD");

                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.Movie", "Movie")
                        .WithMany("MovieFormats")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__MovieForm__movie__7C4F7684");

                    b.Navigation("Format");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.MovieGenre", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.Genre", "Genre")
                        .WithMany("MovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__MovieGenr__genre__797309D9");

                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.Movie", "Movie")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__MovieGenr__movie__787EE5A0");

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Payment", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Payment__booking__367C1819");

                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentMethodId")
                        .IsRequired()
                        .HasConstraintName("FK__Payment__payment__37703C52");

                    b.Navigation("Booking");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Room", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.Cinema", "Cinema")
                        .WithMany("Rooms")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Room__cinema_id__59FA5E80");

                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.RoomFormat", "Format")
                        .WithMany("Rooms")
                        .HasForeignKey("FormatId")
                        .IsRequired()
                        .HasConstraintName("FK__Room__format_id__5AEE82B9");

                    b.Navigation("Cinema");

                    b.Navigation("Format");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Seat", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.Room", "Room")
                        .WithMany("Seats")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Seat__room_id__66603565");

                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.SeatType", "SeatType")
                        .WithMany("Seats")
                        .HasForeignKey("SeatTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Seat__seat_type___6754599E");

                    b.Navigation("Room");

                    b.Navigation("SeatType");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Showtime", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.Movie", "Movie")
                        .WithMany("Showtimes")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Showtime__movie___0B91BA14");

                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.Room", "Room")
                        .WithMany("Showtimes")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Showtime__room_i__0C85DE4D");

                    b.Navigation("Movie");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Ticket", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.Booking", "Booking")
                        .WithMany("Tickets")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Ticket__TicketSt__3E1D39E1");

                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.Seat", "Seat")
                        .WithMany("Tickets")
                        .HasForeignKey("SeatId")
                        .IsRequired()
                        .HasConstraintName("FK__Ticket__seat_id__40058253");

                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.Showtime", "Showtime")
                        .WithMany("Tickets")
                        .HasForeignKey("ShowtimeId")
                        .IsRequired()
                        .HasConstraintName("FK__Ticket__showtime__3F115E1A");

                    b.Navigation("Booking");

                    b.Navigation("Seat");

                    b.Navigation("Showtime");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.UserRole", b =>
                {
                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UserRole__role_i__5070F446");

                    b.HasOne("QUANLYRAPCHIEUPHHIM.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UserRole__user_i__4F7CD00D");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Address", b =>
                {
                    b.Navigation("Cinemas");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Booking", b =>
                {
                    b.Navigation("BookingBookingStatuses");

                    b.Navigation("Payments");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.BookingStatus", b =>
                {
                    b.Navigation("BookingBookingStatuses");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Cinema", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.City", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Discount", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("DiscountDiscountTypes");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.DiscountType", b =>
                {
                    b.Navigation("DiscountDiscountTypes");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Genre", b =>
                {
                    b.Navigation("MovieGenres");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Movie", b =>
                {
                    b.Navigation("MovieCasts");

                    b.Navigation("MovieFormats");

                    b.Navigation("MovieGenres");

                    b.Navigation("Showtimes");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.MovieCast", b =>
                {
                    b.Navigation("MovieCastRoleTypes");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.MoviePerson", b =>
                {
                    b.Navigation("MovieCasts");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.PaymentMethod", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Province", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.RoleType", b =>
                {
                    b.Navigation("MovieCastRoleTypes");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Room", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("Showtimes");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.RoomFormat", b =>
                {
                    b.Navigation("MovieFormats");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Seat", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.SeatType", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.Showtime", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("QUANLYRAPCHIEUPHHIM.Models.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
