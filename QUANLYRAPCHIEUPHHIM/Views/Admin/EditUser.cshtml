@model QUANLYRAPCHIEUPHHIM.Models.User

<h2>Edit User</h2>

<form asp-action="EditUser">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="UserId" />
    
    <div class="form-group">
        <label asp-for="Username">Username</label>
        <input asp-for="Username" class="form-control" />
        <span asp-validation-for="Username" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Email">Email</label>
        <input asp-for="Email" class="form-control" type="email" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="FullName">Full Name</label>
        <input asp-for="FullName" class="form-control" />
        <span asp-validation-for="FullName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Phone">Phone</label>
        <input asp-for="Phone" class="form-control" />
        <span asp-validation-for="Phone" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label>New Password (leave blank to keep current)</label>
        <input name="NewPassword" class="form-control" type="password" />
    </div>

    <div class="form-group">
        <label>Role</label>
        <select name="RoleId" class="form-control">
            @foreach (var role in ViewBag.Roles)
            {
                <option value="@role.RoleId" selected="@(Model.UserRoles.Any(ur => ur.RoleId == role.RoleId))">
                    @role.RoleName
                </option>
            }
        </select>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <a asp-action="Users" class="btn btn-secondary">Back to List</a>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
} 