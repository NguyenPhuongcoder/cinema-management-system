@model QUANLYRAPCHIEUPHHIM.ViewModels.MovieLibraryViewModel
@{
    ViewData["Title"] = "Phim điện ảnh";
    Layout = "_Layout";
}
<div class="container my-4">
    <h3 class="fw-bold mb-3" style="letter-spacing:1px;">PHIM ĐIỆN ẢNH</h3>

    <div class="movie-filter-bar d-flex gap-2 align-items-center pb-2 mb-3" style="border-bottom:3px solid #1976d2;">
        <select class="form-select" name="genre" style="width:160px">
            <option value="">Thể Loại</option>
            @foreach (var g in Model.Genres)
            {
                    <option value="@g.GenreName" selected="@(g.GenreName == Model.SelectedGenre)">@g.GenreName</option>

            }
        </select>
        <select class="form-select" name="year" style="width:110px">
            <option value="">Năm</option>
            @foreach (var y in Model.Years)
            {
                <option value="@y" selected="@(y == Model.SelectedYear)">@y</option>
            }
        </select>
        <select class="form-select" name="status" style="width:200px">
            <option value="">Đang Chiếu/Sắp</option>
            <option value="nowshowing" selected="@(Model.SelectedStatus == "nowshowing")">Đang Chiếu</option>
            <option value="comingsoon" selected="@(Model.SelectedStatus == "comingsoon")">Sắp Chiếu</option>
        </select>
    </div>

    <div id="movie-list-container">
        @await Html.PartialAsync("_MovieLibraryList", Model.Movies)
    </div>
    <div id="pagination-container">
        @await Html.PartialAsync("_Pagination", new { CurrentPage = Model.CurrentPage, TotalPages = Model.TotalPages, PageSize = Model.PageSize, TotalItems = Model.TotalItems })
    </div>
</div>

<div class="loading-overlay" style="display: none;">
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>

@section Styles {
    <style>
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.8);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }

        .loading {
            opacity: 0.5;
            pointer-events: none;
        }

        .pagination .page-link {
            color: #1976d2;
            padding: 0.5rem 0.75rem;
            margin: 0 2px;
            border-radius: 4px;
        }

        .pagination .page-item.active .page-link {
            background-color: #1976d2;
            border-color: #1976d2;
            color: white;
        }

        .pagination .page-link:hover {
            background-color: #e3f2fd;
            border-color: #e3f2fd;
            color: #1976d2;
        }

        .pagination .page-link:focus {
            box-shadow: 0 0 0 0.2rem rgba(25, 118, 210, 0.25);
        }
    </style>
    <link rel="stylesheet" href="/css/movie-library.css" />
}

@section Scripts {
<script>
$(function() {
            var isLoading = false;

            function showLoading() {
                isLoading = true;
                $('.loading-overlay').show();
                $('#movie-list-container').addClass('loading');
            }

            function hideLoading() {
                isLoading = false;
                $('.loading-overlay').hide();
                $('#movie-list-container').removeClass('loading');
            }

    function loadMovies(page = 1) {
                if (isLoading) return;
                
                showLoading();

                var data = {
                    genre: $('select[name="genre"]').val(),
                    year: $('select[name="year"]').val(),
                    status: $('select[name="status"]').val(),
                    page: page,
                    pageSize: 8
                };

                // Update URL with filter parameters
                var queryString = $.param(data);
                window.history.replaceState({}, '', `${window.location.pathname}?${queryString}`);

                $.ajax({
                    url: '/Movie/LibraryAjax',
                    data: data,
                    method: 'GET',
                    success: function(html) {
            $('#movie-list-container').html(html);
                        
                        // Load pagination
                        $.ajax({
                            url: '/Movie/LibraryAjax',
                            data: { ...data, partial: 'pagination' },
                            method: 'GET',
                            success: function(paginationHtml) {
                $('#pagination-container').html(paginationHtml);
                            },
                            error: function() {
                                toastr.error('Có lỗi xảy ra khi tải phân trang');
                            }
                        });
                    },
                    error: function() {
                        toastr.error('Có lỗi xảy ra khi tải danh sách phim');
                    },
                    complete: function() {
                        hideLoading();
                    }
        });
    }

            // Handle filter changes
    $('.movie-filter-bar select').on('change', function() {
        loadMovies(1);
    });

            // Handle pagination clicks
    $(document).on('click', '#pagination-container .page-link', function(e) {
        e.preventDefault();
        var page = $(this).data('page');
        loadMovies(page);
                
                // Scroll to top of movie list
                $('html, body').animate({
                    scrollTop: $('#movie-list-container').offset().top - 100
                }, 500);
            });

            // Load initial state from URL parameters
            var urlParams = new URLSearchParams(window.location.search);
            if (urlParams.toString()) {
                $('select[name="genre"]').val(urlParams.get('genre'));
                $('select[name="year"]').val(urlParams.get('year'));
                $('select[name="status"]').val(urlParams.get('status'));
                loadMovies(urlParams.get('page') || 1);
            }
});
</script>
} 